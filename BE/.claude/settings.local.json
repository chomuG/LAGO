{
  "permissions": {
    "allow": [
      "Bash(copy:*)",
      "Bash(cp:*)",
      "Bash(docker-compose up:*)",
      "Bash(docker-compose:*)",
      "Bash(./gradlew:*)",
      "Bash(curl:*)",
      "Bash(taskkill:*)",
      "Bash(cmd //c:*)",
      "Bash(python:*)",
      "Bash(pip install:*)",
      "Bash(start /b:*)",
      "Bash(powershell:*)",
      "Bash(set NAVER_CLIENT_ID=TQeJEcmiR1hnZ6CNiXnA)",
      "Bash(set NAVER_CLIENT_SECRET=lVWp4C4vUb)",
      "Bash(setx:*)",
      "Bash(start-with-env.bat)",
      "Bash(gradlew.bat build:*)",
      "Bash(timeout 30 docker-compose logs -f backend)",
      "Bash(docker exec:*)",
      "Bash(mv:*)",
      "Bash(rmdir:*)",
      "Bash(rm:*)",
      "Bash(docker logs:*)",
      "Bash(telnet:*)",
      "Bash(docker restart:*)",
      "Bash(docker build:*)",
      "Bash(docker stop:*)",
      "Bash(docker rm:*)",
      "Bash(docker run:*)",
      "Bash(docker port:*)",
      "Bash(docker:*)",
      "Bash(timeout 10 docker-compose logs -f backend)",
      "WebFetch(domain:developers.naver.com)",
      "Bash(git add:*)",
      "Bash(git pull:*)",
      "Bash(git checkout:*)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(winpty docker exec -it timescaledb psql -U postgres -d stock_db -c \"\\dt\")",
      "Bash(gradlew.bat clean:*)",
      "Bash(.gradlew.bat clean build)",
      "Bash(.gradlew.bat clean:*)",
      "Bash(timeout 30 docker logs -f spring-backend)",
      "Bash(timeout 15 docker-compose logs -f backend)",
      "Bash(timeout 20 docker logs spring-backend -f)",
      "Bash(timeout 15 docker logs spring-backend -f)",
      "Bash(timeout 10 docker logs spring-backend -f)",
      "Bash(timeout 10 docker logs spring-backend)",
      "Bash(timeout 30 docker logs spring-backend -f)",
      "Bash(timeout 60 docker logs spring-backend -f --tail 20)",
      "Bash(timeout 30 docker logs spring-backend -f --tail 10)",
      "Bash(timeout 10 docker logs spring-backend --tail 20)",
      "Bash(winpty docker exec -it timescaledb psql -U postgres -d stock_db -c \"SELECT COUNT(*) as total_news FROM \"\"NEWS\"\";\")",
      "Bash(timeout 30 docker logs spring-backend --tail 10)",
      "Bash(timeout 60 docker logs spring-backend -f --tail 5)",
      "Bash(timeout 30 docker logs spring-backend -f --tail 5)",
      "Bash(winpty docker exec -it timescaledb psql -U postgres -d stock_db -c \"SELECT COUNT(*) as total_news FROM \"\"NEWS\"\";\")",
      "Bash(git fetch:*)",
      "Bash(timeout 20 docker logs spring-backend --tail 20)",
      "Bash(timeout 10 docker logs spring-backend --tail 5)",
      "Bash(timeout 15 docker logs finbert-service --tail 10)",
      "Bash(timeout 15 docker logs spring-backend --tail 5)",
      "Bash(timeout 20 docker logs spring-backend -f --tail 5)",
      "Bash(timeout 20 docker logs spring-backend --tail 5)",
      "Bash(timeout 5 docker logs spring-backend -f --tail 3)",
      "Bash(timeout 15 docker logs finbert-service --tail 15)",
      "Bash(timeout 10 docker logs finbert-service --tail 3)",
      "Bash(timeout 30 docker logs finbert-service -f --tail 5)",
      "Bash(timeout 30 docker logs finbert-service --tail 20)",
      "Bash(timeout 15 docker logs spring-backend --tail 30)",
      "Bash(timeout 10 docker logs spring-backend --tail 50)",
      "Bash(timeout 10 docker logs spring-backend --tail 15)",
      "Bash(timeout 10 docker logs spring-backend --tail 30)",
      "Bash(timeout 10 docker logs finbert-service --tail 10)",
      "Bash(winpty docker exec -it timescaledb psql -U postgres -d stock_db -c \"\\d \"\"NEWS\"\"\")",
      "Bash(timeout 30 docker logs spring-backend --tail 50)",
      "Bash(timeout 60 docker logs spring-backend -f --tail 10)",
      "Bash(timeout 60 docker logs spring-backend -f)",
      "Bash(timeout 30 docker-compose restart backend)",
      "Bash(timeout 30 docker-compose restart finbert-service)",
      "Bash(timeout 30 docker logs spring-backend --tail 20)",
      "Bash(timeout 30 docker logs finbert-service --tail 15)",
      "Bash(timeout 60 docker logs finbert-service -f)",
      "Bash(timeout 30 docker logs finbert-service --tail 10)",
      "Bash(timeout 30 docker logs finbert-service -f --tail 10)",
      "Bash(winpty docker exec -it timescaledb psql -U postgres -d stock_db -c \"SELECT COUNT(*) as total_news FROM \"\"NEWS\"\";\")",
      "Bash(timeout 60 docker logs finbert-service -f --tail 5)",
      "Bash(timeout 60 docker logs finbert-service --tail 10)",
      "Bash(timeout 30 docker logs finbert-service --tail 30)",
      "Bash(timeout 30 docker logs finbert-service -f --tail 20)",
      "Bash(timeout 15 docker logs spring-backend --tail 10)",
      "Bash(timeout 15 docker logs spring-backend -f --tail 3)",
      "Bash(timeout 15 docker logs spring-backend --tail 20)",
      "Bash(timeout 30 docker logs spring-backend -f --tail 20)",
      "Bash(winpty docker exec -it spring-backend ls -la /app)",
      "Bash(timeout 45 docker logs spring-backend -f --tail 5)",
      "Bash(timeout 15 docker logs finbert-service --tail 30)",
      "Bash(timeout 10 docker logs spring-backend --tail 10)",
      "Bash(timeout 10 docker logs spring-backend --tail 100)",
      "Bash(timeout 10 docker logs finbert-service --tail 5)",
      "Bash(timeout 15 docker logs finbert-service -f --tail 20)",
      "Bash(timeout 15 docker logs finbert-service --tail 20)",
      "Bash(timeout 20 docker logs finbert-service -f --tail 5)",
      "Bash(winpty docker exec -it timescaledb psql -U postgres -d stock_db -c \"SELECT COUNT(*) as total_news FROM \"\"NEWS\"\";\")",
      "Bash(timeout 15 docker logs finbert-service)",
      "Bash(timeout 10 docker logs finbert-service)",
      "Bash(timeout 30 docker logs spring-backend --tail 100)",
      "Bash(timeout 30 docker logs finbert-service --tail 100)",
      "Bash(timeout 30 docker logs finbert-service --tail 50)",
      "Bash(winpty docker exec -it timescaledb psql -U postgres -d stock_db -c \"SELECT COUNT(*) as total_news FROM \"\"NEWS\"\";\")",
      "Bash(timeout 60 docker logs finbert-service --tail 30 -f)",
      "Bash(timeout 180 docker logs spring-backend -f --tail 5)",
      "Bash(timeout 10 docker logs finbert-service --tail 30)",
      "Bash(timeout 10 docker logs finbert-service --tail 20)",
      "Bash(timeout 10 docker logs finbert-service --tail 50)",
      "Bash(timeout 5 docker logs finbert-service --tail 20)",
      "Bash(timeout 20 docker-compose restart finbert-service)",
      "Bash(timeout 10 docker logs finbert-service -f --tail 5)",
      "Bash(timeout 5 docker logs finbert-service --tail 10)",
      "Bash(git rm:*)",
      "Bash(true)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(docker run:*)",
      "Bash(docker stop:*)",
      "Bash(docker rm:*)",
      "Bash(docker build:*)",
      "Bash(curl:*)",
      "Bash(docker:*)",
      "Bash(winpty docker exec -it timescaledb psql -U lago_user -d stock_db -c \"SELECT COUNT(*) FROM \"\"NEWS\"\";\")",
      "Bash(taskkill:*)",
      "Bash(python:*)",
      "Bash(timeout:*)"
    ],
    "deny": []
  }
}