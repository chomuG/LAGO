# =================================================================
# 개발 환경 전용 설정 (Profile: dev)
# 지침서 명세: 환경변수/시크릿 분리, 테스트/운영 환경 분리
# =================================================================

# 서버 포트 설정 (개발용)
server.port=9000

# JPA/Hibernate 설정 (개발용)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Redis 설정 (개발용 - 없으면 비활성화)
# Redis 환경변수 매핑 및 기본값
# Redis (Spring Boot 3.x 표준 키)
spring.data.redis.host=${SPRING_REDIS_HOST:redis}
spring.data.redis.port=${SPRING_REDIS_PORT:6379}
spring.data.redis.timeout=3s
spring.data.redis.repositories.enabled=false

# 앱 커스텀 스트림 설정(유지)
spring.redis.stream.key=${REDIS_STREAM_KEY:orders-stream}
spring.redis.stream.read-timeout=1000
spring.redis.stream.batch-size=10

# 필요 시 컨슈머 그룹/이름 (네가 쓰는 커스텀 키면 유지)
redis.stream.consumer-group=${REDIS_STREAM_CONSUMER_GROUP:lago_group}
redis.stream.consumer-name=${REDIS_STREAM_CONSUMER_NAME:lago_consumer}



# 로깅 설정 (상세 디버깅)
logging.level.com.example.LAGO=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.web=DEBUG

# Spring Security 비활성화 (개발용)
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration

# Swagger UI 설정
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.enabled=true

# FinBERT 감정 분석 서버 설정 (개발용)
finbert.url=${FINBERT_URL:http://finbert-service:8000}
finbert.server.host=http://finbert-service:8000
finbert.server.analyze-endpoint=/analyze
finbert.server.health-endpoint=/health
finbert.client.timeout=30000

# 개발용 Mock 데이터 설정
app.mock.enable-sample-data=true
app.mock.ai-bot-count=4

# Virtual Thread 설정 (Java 21)
spring.threads.virtual.enabled=true

# 캐시 설정 (개발용 - 간단한 설정)
spring.cache.type=simple

management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# 뉴스 수집 스케줄러 활성화
spring.task.scheduling.enabled=true
