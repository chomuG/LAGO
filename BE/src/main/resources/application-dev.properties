# =================================================================
# 개발 환경 설정 (Profile: dev)
# 로컬 개발, Docker Compose 환경
# =================================================================

# 서버 포트 (Jenkins 8080과 구분)
server.port=9000

# =================================================================
# PostgreSQL/TimescaleDB (Docker)
# =================================================================
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://timescaledb:5432/stock_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:ssafyuser}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:ssafypw!}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA 설정
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=true

# =================================================================
# Redis (Docker)
# =================================================================
spring.redis.host=${SPRING_REDIS_HOST:redis}
spring.redis.port=${SPRING_REDIS_PORT:6379}

# =================================================================
# 개발용 로깅
# =================================================================
logging.level.com.example.LAGO=${LOG_LEVEL:DEBUG}
logging.level.org.hibernate.SQL=DEBUG

# =================================================================
# FinBERT 설정
# =================================================================
finbert.server.host=${FINBERT_SERVER_HOST:http://localhost:5000}
finbert.client.timeout=${FINBERT_CLIENT_TIMEOUT:10000}
