# =================================================================
# 개발 환경 전용 설정 (Profile: dev)
# 지침서 명세: 환경변수/시크릿 분리, 테스트/운영 환경 분리
# =================================================================

# 서버 포트 설정 (개발용)
server.port=8080

# 데이터베이스 연결 설정 - PostgreSQL (Docker 개발용)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://timescaledb:5432/stock_db}
spring.datasource.username=${POSTGRES_USER:ssafyuser}
spring.datasource.password=${POSTGRES_PASSWORD:changeme}
spring.datasource.driver-class-name=org.postgresql.Driver
# H2 자동 설정 비활성화
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration

# JPA/Hibernate 설정 (개발용)
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Hibernate TimescaleDB 지원
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# Redis 설정 (개발용 - 환경변수 사용)
spring.redis.host=${SPRING_REDIS_HOST:redis}
spring.redis.port=${SPRING_REDIS_PORT:6379}
spring.redis.timeout=2000ms

# Redis Stream Consumer 설정 (실시간 주식 데이터용 - 뉴스와 무관)
redis.stream.enabled=false
redis.stream.key=krx_stream_key1
redis.stream.consumer-group=spring-candle-group
redis.stream.consumer-name=consumer-${random.uuid}
redis.stream.read-timeout=1000
redis.stream.batch-size=10

# 로깅 설정 (상세 디버깅)
logging.level.com.example.LAGO=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.web=DEBUG

# Spring Security 비활성화 (개발용)
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration

# Swagger UI 설정
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.enabled=true

# FinBERT 감정 분석 서버 설정 (개발용)
finbert.server.host=${FINBERT_SERVER_HOST:http://finbert:5000}
finbert.server.analyze-endpoint=/analyze
finbert.server.health-endpoint=/health
finbert.client.timeout=10000

# 개발용 Mock 데이터 설정
app.mock.enable-sample-data=true
app.mock.ai-bot-count=4

# Virtual Thread 설정 (Java 21)
spring.threads.virtual.enabled=true

# 캐시 설정 (개발용 - 간단한 설정)
spring.cache.type=simple

# =================================================================
# 뉴스 API 설정 (개발용)
# =================================================================
# 네이버 뉴스 API
naver.api.client-id=${NAVER_CLIENT_ID:}
naver.api.client-secret=${NAVER_CLIENT_SECRET:}

# Claude API 
claude.api.key=${CLAUDE_API_KEY:S13P11D203-c5ba35f0-48f1-4e2d-a711-8d000235564e}

# 뉴스 수집 스케줄러 활성화/비활성화
app.news.scheduler.enabled=${NEWS_SCHEDULER_ENABLED:true}

# =================================================================
# Chart Analysis Service
# =================================================================
services.chart-analysis.url=${CHART_ANALYSIS_URL:http://finbert:5000/detect-patterns}
