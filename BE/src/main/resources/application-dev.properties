# =================================================================
<<<<<<< HEAD
=======
<<<<<<< HEAD
# 개발 환경 설정 (Profile: dev)
# 용도: 로컬 개발, IDE에서 실행
# 활성화: --spring.profiles.active=dev
# =================================================================

# 서버 포트 설정
server.port=9000

# 데이터베이스 연결 설정 - Docker TimescaleDB 연결
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://timescaledb:5432/stock_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:ssafyuser}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:ssafypw!}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate 설정 (개발용)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Redis 설정 (Docker용)
spring.redis.host=${SPRING_REDIS_HOST:redis}
spring.redis.port=${SPRING_REDIS_PORT:6379}
spring.redis.timeout=2000ms

# 로깅 설정 (개발용 - 상세 로그)
logging.level.com.example.LAGO=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
=======
>>>>>>> backend-dev
# 개발 환경 전용 설정 (Profile: dev)
# 지침서 명세: 환경변수/시크릿 분리, 테스트/운영 환경 분리
# =================================================================

# 서버 포트 설정 (개발용)
server.port=9000

# 데이터베이스 연결 설정 - H2 인메모리 DB (개발용)
spring.datasource.url=jdbc:h2:mem:devdb
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver

# H2 콘솔 활성화 (개발용)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA/Hibernate 설정 (개발용)
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Redis 설정 (개발용 - 없으면 비활성화)
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.timeout=2000ms

# 로깅 설정 (상세 디버깅)
logging.level.com.example.LAGO=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.web=DEBUG

# Spring Security 비활성화 (개발용)
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration

# Swagger UI 설정
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.enabled=true
<<<<<<< HEAD
=======
>>>>>>> be/feat/chart-analysis(S13P11D203-104)
>>>>>>> backend-dev

# FinBERT 감정 분석 서버 설정 (개발용)
finbert.server.host=http://localhost:5000
finbert.server.analyze-endpoint=/analyze
finbert.server.health-endpoint=/health
finbert.client.timeout=10000
<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
>>>>>>> backend-dev

# 개발용 Mock 데이터 설정
app.mock.enable-sample-data=true
app.mock.ai-bot-count=4

# Virtual Thread 설정 (Java 21)
spring.threads.virtual.enabled=true

# 캐시 설정 (개발용 - 간단한 설정)
spring.cache.type=simple
<<<<<<< HEAD
=======
>>>>>>> be/feat/chart-analysis(S13P11D203-104)
>>>>>>> backend-dev
