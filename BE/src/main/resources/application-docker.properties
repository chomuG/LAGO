# =================================================================
# Docker 환경 설정 (Profile: docker)
# 용도: Docker Compose 및 Jenkins CI/CD에서 사용
# 활성화: SPRING_PROFILES_ACTIVE=docker
# =================================================================

# 데이터베이스 설정 - 환경변수 사용 (.env 파일)
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate 설정
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl

# Redis 설정 - Docker 컨테이너 내부 통신
spring.redis.host=${SPRING_REDIS_HOST:redis}
spring.redis.port=${SPRING_REDIS_PORT:6379}
spring.redis.timeout=2000ms

# Spring Security 완전 비활성화 (개발 단계)
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration

# Swagger UI 접근 설정
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

# 서버 포트 설정 (Docker 컨테이너 내부: 8080, 외부 접근: 8081)
server.port=8080

# 로깅 설정 (운영용 - 최소 로그)
logging.level.com.example.LAGO=INFO
logging.level.org.hibernate.SQL=WARN
logging.level.root=WARN
