# =================================================================
# 배포 환경 설정 (Profile: prod)
# 용도: Docker, CI/CD, 운영 서버 배포
# 활성화: SPRING_PROFILES_ACTIVE=prod
# =================================================================

# 서버 포트 설정 (환경변수 또는 기본값)
server.port=${SERVER_PORT:8080}

# 데이터베이스 설정 - 환경변수 사용 (보안 강화)
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate 설정 (운영용)
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:none}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=false

# Redis 설정 - Docker 환경
spring.redis.host=${SPRING_REDIS_HOST:redis}
spring.redis.port=${SPRING_REDIS_PORT:6379}
spring.redis.timeout=${SPRING_REDIS_TIMEOUT:3000ms}
spring.redis.password=${SPRING_REDIS_PASSWORD:}

# 로깅 설정 (운영용 - 필요한 로그만)
logging.level.com.example.LAGO=${LOG_LEVEL:INFO}
logging.level.org.hibernate.SQL=WARN
logging.level.org.springframework=WARN

# FinBERT 서버 설정 (운영용)
finbert.server.host=${FINBERT_SERVER_HOST:http://finbert:5000}
finbert.server.analyze-endpoint=/analyze
finbert.server.health-endpoint=/health
finbert.client.timeout=${FINBERT_CLIENT_TIMEOUT:15000}

# 운영 환경 보안 설정
server.error.include-message=never
server.error.include-binding-errors=never
