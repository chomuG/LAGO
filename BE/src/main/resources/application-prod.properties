# =================================================================
# 운영 환경 전용 설정 (Profile: prod)
# EC2 배포시 사용 - 모든 중요 설정은 환경변수에서 주입
# =================================================================

# 서버 포트 (compose에서 외부 8081로 매핑 예정)
server.port=9000

# JPA/Hibernate 설정 (운영용)
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.open-in-view=false
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# PostgreSQL 데이터베이스 (환경변수에서 주입)
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# 커넥션 풀 설정 (운영용)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=30000

# Redis (Boot 3.x 표준 키!)
spring.data.redis.host=${SPRING_REDIS_HOST:redis}
spring.data.redis.port=${SPRING_REDIS_PORT:6379}
spring.data.redis.timeout=3s

# 스트림 커스텀
spring.redis.stream.key=${REDIS_STREAM_KEY:orders-stream}
redis.stream.consumer-group=${REDIS_STREAM_CONSUMER_GROUP:lago_group}
redis.stream.consumer-name=${REDIS_STREAM_CONSUMER_NAME:lago_consumer}
spring.redis.stream.read-timeout=1000
spring.redis.stream.batch-size=10

# 중복 스캔 억제(레디스 레포 안 쓸 때)
spring.data.redis.repositories.enabled=false

# Actuator (prod선 최소)
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=never
